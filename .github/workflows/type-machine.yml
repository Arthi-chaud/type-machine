name: "Type Machine"
on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  Changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      tm: ${{ steps.filter.outputs.tm }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            tm:
              - 'app/*'
              - 'src/**'
              - 'test/**'
              - '*.yaml'
              - '*.cabal'
              - '*.lock'
              - '.github/workflows/*.yml'

  Build:
    needs: changes
    if: ${{ needs.changes.outputs.tm == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        ghc-version: [
          # 9.0.2,
          # 9.2.8,
          # 9.4.8, 
          # 9.6.6,
          # 9.8.4,
          9.10.1,
          # 9.12.1
        ]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
      - name: Setup GHC
        uses: ./.github/actions/cache-deps
        with:
          ghc-version: ${{ matrix.ghc-version }}
      - name: Build 
        run: |
          stack --compiler ghc-${{ matrix.ghc-version }} build type-machine:lib type-machine:test:type-machine-test
  Format:
    if: ${{ needs.changes.outputs.tm == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache-deps
      - uses: haskell-actions/run-fourmolu@v9
        with:
          version: "0.14.0.0"
          pattern: |
            **/*.hs
            !.stack-work/
          follow-symbolic-links: false
  Lint:
    if: ${{ needs.changes.outputs.tm == 'true' && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs: [ Build ]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache-deps
      - name: 'Set up HLint'
        uses: rwe/actions-hlint-setup@v1
        with:
          version: '3.5'
      - name: 'Run HLint'
        uses: rwe/actions-hlint-run@v2
        with:
          path: '["src/", "test/"]'
          fail-on: warning
  Tests:
    runs-on: ubuntu-latest
    needs: [ Build ]
    strategy:
      fail-fast: false
      matrix:
        ghc-version: [
          # 9.0.2,
          # 9.2.8,
          # 9.4.8, 
          # 9.6.6,
          # 9.8.4,
          9.10.1,
          # 9.12.1
        ]
    if: ${{ needs.changes.outputs.tm == 'true' && always() }}
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Setup GHC
        uses: ./.github/actions/cache-deps
        with:
          ghc-version: ${{ matrix.ghc-version }}
      - name: Run unit tests
        run: stack test --compiler ghc-${{ matrix.ghc-version }}
